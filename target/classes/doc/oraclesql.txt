-- Repository creation/upgrade DDL: 
--
-- Nothing was created nor modified in the target repository database.
-- Hit the OK button to execute the generated SQL or Close to reject the changes.
-- Please note that it is possible to change/edit the generated SQL before execution.
--
CREATE TABLE R_REPOSITORY_LOG
(
  ID_REPOSITORY_LOG INTEGER
, REP_VERSION VARCHAR2(255)
, LOG_DATE DATE
, LOG_USER VARCHAR2(255)
, OPERATION_DESC CLOB
, PRIMARY KEY (ID_REPOSITORY_LOG)
)
;

CREATE TABLE R_VERSION
(
  ID_VERSION INTEGER
, MAJOR_VERSION INTEGER
, MINOR_VERSION INTEGER
, UPGRADE_DATE DATE
, IS_UPGRADE CHAR(1)
, PRIMARY KEY (ID_VERSION)
)
;

INSERT INTO R_VERSION(ID_VERSION, MAJOR_VERSION, MINOR_VERSION, UPGRADE_DATE, IS_UPGRADE) VALUES (1,5,0,TO_DATE('2016/09/09 16:29:58', 'YYYY/MM/DD HH24:MI:SS'),'N');

CREATE TABLE R_DATABASE_TYPE
(
  ID_DATABASE_TYPE INTEGER
, CODE VARCHAR2(255)
, DESCRIPTION VARCHAR2(255)
, PRIMARY KEY (ID_DATABASE_TYPE)
)
;

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (1,'ORACLERDB','Oracle RDB');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (2,'INFINIDB','Calpont InfiniDB');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (3,'INFOBRIGHT','Infobright');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (4,'GENERIC','Generic database');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (5,'AS/400','AS/400');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (6,'SYBASEIQ','SybaseIQ');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (7,'SQLITE','SQLite');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (8,'DERBY','Apache Derby');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (9,'INFORMIX','Informix');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (10,'INGRES','Ingres');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (11,'REMEDY-AR-SYSTEM','Remedy Action Request System');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (12,'POSTGRESQL','PostgreSQL');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (13,'SAPR3','SAP ERP System');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (14,'REDSHIFT','Redshift');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (15,'CACHE','Intersystems Cache');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (16,'MSSQL','MS SQL Server');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (17,'TERADATA','Teradata');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (18,'DB2','IBM DB2');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (19,'SQLBASE','Gupta SQL Base');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (20,'MYSQL','MySQL');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (21,'FIREBIRD','Firebird SQL');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (22,'HYPERSONIC','Hypersonic');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (23,'KINGBASEES','KingbaseES');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (24,'MSACCESS','MS Access');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (25,'INTERBASE','Borland Interbase');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (26,'VERTICA5','Vertica 5+');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (27,'MSSQLNATIVE','MS SQL Server (Native)');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (28,'EXASOL4','Exasol 4');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (29,'EXTENDB','ExtenDB');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (30,'UNIVERSE','UniVerse database');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (31,'NEOVIEW','Neoview');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (32,'LucidDB','LucidDB');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (33,'SAPDB','MaxDB (SAP DB)');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (34,'VERTICA','Vertica');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (35,'H2','H2');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (36,'DBASE','dBase III, IV or 5');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (37,'VECTORWISE','Ingres VectorWise');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (38,'SYBASE','Sybase');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (39,'ORACLE','Oracle');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (40,'MONDRIAN','Native Mondrian');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (41,'NETEZZA','Netezza');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (42,'GREENPLUM','Greenplum');

INSERT INTO R_DATABASE_TYPE(ID_DATABASE_TYPE, CODE, DESCRIPTION) VALUES (43,'MONETDB','MonetDB');

CREATE TABLE R_DATABASE_CONTYPE
(
  ID_DATABASE_CONTYPE INTEGER
, CODE VARCHAR2(255)
, DESCRIPTION VARCHAR2(255)
, PRIMARY KEY (ID_DATABASE_CONTYPE)
)
;

INSERT INTO R_DATABASE_CONTYPE(ID_DATABASE_CONTYPE, CODE, DESCRIPTION) VALUES (1,'Native','Native (JDBC)');

INSERT INTO R_DATABASE_CONTYPE(ID_DATABASE_CONTYPE, CODE, DESCRIPTION) VALUES (2,'ODBC','ODBC');

INSERT INTO R_DATABASE_CONTYPE(ID_DATABASE_CONTYPE, CODE, DESCRIPTION) VALUES (3,'OCI','OCI');

INSERT INTO R_DATABASE_CONTYPE(ID_DATABASE_CONTYPE, CODE, DESCRIPTION) VALUES (4,'Plugin','Plugin specific access method');

INSERT INTO R_DATABASE_CONTYPE(ID_DATABASE_CONTYPE, CODE, DESCRIPTION) VALUES (5,'JNDI','JNDI');

INSERT INTO R_DATABASE_CONTYPE(ID_DATABASE_CONTYPE, CODE, DESCRIPTION) VALUES (6,',','Custom');

CREATE TABLE R_NOTE
(
  ID_NOTE INTEGER
, VALUE_STR CLOB
, GUI_LOCATION_X INTEGER
, GUI_LOCATION_Y INTEGER
, GUI_LOCATION_WIDTH INTEGER
, GUI_LOCATION_HEIGHT INTEGER
, FONT_NAME CLOB
, FONT_SIZE INTEGER
, FONT_BOLD CHAR(1)
, FONT_ITALIC CHAR(1)
, FONT_COLOR_RED INTEGER
, FONT_COLOR_GREEN INTEGER
, FONT_COLOR_BLUE INTEGER
, FONT_BACK_GROUND_COLOR_RED INTEGER
, FONT_BACK_GROUND_COLOR_GREEN INTEGER
, FONT_BACK_GROUND_COLOR_BLUE INTEGER
, FONT_BORDER_COLOR_RED INTEGER
, FONT_BORDER_COLOR_GREEN INTEGER
, FONT_BORDER_COLOR_BLUE INTEGER
, DRAW_SHADOW CHAR(1)
, PRIMARY KEY (ID_NOTE)
)
;

CREATE TABLE R_DATABASE
(
  ID_DATABASE INTEGER
, NAME VARCHAR2(255)
, ID_DATABASE_TYPE INTEGER
, ID_DATABASE_CONTYPE INTEGER
, HOST_NAME VARCHAR2(255)
, DATABASE_NAME CLOB
, PORT INTEGER
, USERNAME VARCHAR2(255)
, PASSWORD VARCHAR2(255)
, SERVERNAME VARCHAR2(255)
, DATA_TBS VARCHAR2(255)
, INDEX_TBS VARCHAR2(255)
, PRIMARY KEY (ID_DATABASE)
)
;

CREATE TABLE R_DATABASE_ATTRIBUTE
(
  ID_DATABASE_ATTRIBUTE INTEGER
, ID_DATABASE INTEGER
, CODE VARCHAR2(255)
, VALUE_STR CLOB
, PRIMARY KEY (ID_DATABASE_ATTRIBUTE)
)
;

CREATE UNIQUE INDEX IDX_RDAT ON R_DATABASE_ATTRIBUTE(ID_DATABASE, CODE)
;

CREATE TABLE R_DIRECTORY
(
  ID_DIRECTORY INTEGER
, ID_DIRECTORY_PARENT INTEGER
, DIRECTORY_NAME VARCHAR2(255)
, PRIMARY KEY (ID_DIRECTORY)
)
;

CREATE UNIQUE INDEX IDX_RDIR ON R_DIRECTORY(ID_DIRECTORY_PARENT, DIRECTORY_NAME)
;

CREATE TABLE R_TRANSFORMATION
(
  ID_TRANSFORMATION INTEGER
, ID_DIRECTORY INTEGER
, NAME VARCHAR2(255)
, DESCRIPTION CLOB
, EXTENDED_DESCRIPTION CLOB
, TRANS_VERSION VARCHAR2(255)
, TRANS_STATUS INTEGER
, ID_STEP_READ INTEGER
, ID_STEP_WRITE INTEGER
, ID_STEP_INPUT INTEGER
, ID_STEP_OUTPUT INTEGER
, ID_STEP_UPDATE INTEGER
, ID_DATABASE_LOG INTEGER
, TABLE_NAME_LOG VARCHAR2(255)
, USE_BATCHID CHAR(1)
, USE_LOGFIELD CHAR(1)
, ID_DATABASE_MAXDATE INTEGER
, TABLE_NAME_MAXDATE VARCHAR2(255)
, FIELD_NAME_MAXDATE VARCHAR2(255)
, OFFSET_MAXDATE NUMBER(12, 2)
, DIFF_MAXDATE NUMBER(12, 2)
, CREATED_USER VARCHAR2(255)
, CREATED_DATE DATE
, MODIFIED_USER VARCHAR2(255)
, MODIFIED_DATE DATE
, SIZE_ROWSET INTEGER
, PRIMARY KEY (ID_TRANSFORMATION)
)
;

CREATE TABLE R_TRANS_ATTRIBUTE
(
  ID_TRANS_ATTRIBUTE INTEGER
, ID_TRANSFORMATION INTEGER
, NR INTEGER
, CODE VARCHAR2(255)
, VALUE_NUM INTEGER
, VALUE_STR CLOB
, PRIMARY KEY (ID_TRANS_ATTRIBUTE)
)
;

CREATE UNIQUE INDEX IDX_TATT ON R_TRANS_ATTRIBUTE(ID_TRANSFORMATION, CODE, NR)
;

CREATE TABLE R_JOB_ATTRIBUTE
(
  ID_JOB_ATTRIBUTE INTEGER
, ID_JOB INTEGER
, NR INTEGER
, CODE VARCHAR2(255)
, VALUE_NUM INTEGER
, VALUE_STR CLOB
, PRIMARY KEY (ID_JOB_ATTRIBUTE)
)
;

CREATE UNIQUE INDEX IDX_JATT ON R_JOB_ATTRIBUTE(ID_JOB, CODE, NR)
;

CREATE TABLE R_DEPENDENCY
(
  ID_DEPENDENCY INTEGER
, ID_TRANSFORMATION INTEGER
, ID_DATABASE INTEGER
, TABLE_NAME VARCHAR2(255)
, FIELD_NAME VARCHAR2(255)
, PRIMARY KEY (ID_DEPENDENCY)
)
;

CREATE TABLE R_PARTITION_SCHEMA
(
  ID_PARTITION_SCHEMA INTEGER
, NAME VARCHAR2(255)
, DYNAMIC_DEFINITION CHAR(1)
, PARTITIONS_PER_SLAVE VARCHAR2(255)
, PRIMARY KEY (ID_PARTITION_SCHEMA)
)
;

CREATE TABLE R_PARTITION
(
  ID_PARTITION INTEGER
, ID_PARTITION_SCHEMA INTEGER
, PARTITION_ID VARCHAR2(255)
, PRIMARY KEY (ID_PARTITION)
)
;

CREATE TABLE R_TRANS_PARTITION_SCHEMA
(
  ID_TRANS_PARTITION_SCHEMA INTEGER
, ID_TRANSFORMATION INTEGER
, ID_PARTITION_SCHEMA INTEGER
, PRIMARY KEY (ID_TRANS_PARTITION_SCHEMA)
)
;

CREATE TABLE R_CLUSTER
(
  ID_CLUSTER INTEGER
, NAME VARCHAR2(255)
, BASE_PORT VARCHAR2(255)
, SOCKETS_BUFFER_SIZE VARCHAR2(255)
, SOCKETS_FLUSH_INTERVAL VARCHAR2(255)
, SOCKETS_COMPRESSED CHAR(1)
, DYNAMIC_CLUSTER CHAR(1)
, PRIMARY KEY (ID_CLUSTER)
)
;

CREATE TABLE R_SLAVE
(
  ID_SLAVE INTEGER
, NAME VARCHAR2(255)
, HOST_NAME VARCHAR2(255)
, PORT VARCHAR2(255)
, WEB_APP_NAME VARCHAR2(255)
, USERNAME VARCHAR2(255)
, PASSWORD VARCHAR2(255)
, PROXY_HOST_NAME VARCHAR2(255)
, PROXY_PORT VARCHAR2(255)
, NON_PROXY_HOSTS VARCHAR2(255)
, MASTER CHAR(1)
, PRIMARY KEY (ID_SLAVE)
)
;

CREATE TABLE R_CLUSTER_SLAVE
(
  ID_CLUSTER_SLAVE INTEGER
, ID_CLUSTER INTEGER
, ID_SLAVE INTEGER
, PRIMARY KEY (ID_CLUSTER_SLAVE)
)
;

CREATE TABLE R_TRANS_SLAVE
(
  ID_TRANS_SLAVE INTEGER
, ID_TRANSFORMATION INTEGER
, ID_SLAVE INTEGER
, PRIMARY KEY (ID_TRANS_SLAVE)
)
;

CREATE TABLE R_TRANS_CLUSTER
(
  ID_TRANS_CLUSTER INTEGER
, ID_TRANSFORMATION INTEGER
, ID_CLUSTER INTEGER
, PRIMARY KEY (ID_TRANS_CLUSTER)
)
;

CREATE TABLE R_TRANS_HOP
(
  ID_TRANS_HOP INTEGER
, ID_TRANSFORMATION INTEGER
, ID_STEP_FROM INTEGER
, ID_STEP_TO INTEGER
, ENABLED CHAR(1)
, PRIMARY KEY (ID_TRANS_HOP)
)
;

CREATE TABLE R_TRANS_STEP_CONDITION
(
  ID_TRANSFORMATION INTEGER
, ID_STEP INTEGER
, ID_CONDITION INTEGER
)
;

CREATE TABLE R_CONDITION
(
  ID_CONDITION INTEGER
, ID_CONDITION_PARENT INTEGER
, NEGATED CHAR(1)
, OPERATOR VARCHAR2(255)
, LEFT_NAME VARCHAR2(255)
, CONDITION_FUNCTION VARCHAR2(255)
, RIGHT_NAME VARCHAR2(255)
, ID_VALUE_RIGHT INTEGER
, PRIMARY KEY (ID_CONDITION)
)
;

CREATE TABLE R_VALUE
(
  ID_VALUE INTEGER
, NAME VARCHAR2(255)
, VALUE_TYPE VARCHAR2(255)
, VALUE_STR VARCHAR2(255)
, IS_NULL CHAR(1)
, PRIMARY KEY (ID_VALUE)
)
;

CREATE TABLE R_STEP_TYPE
(
  ID_STEP_TYPE INTEGER
, CODE VARCHAR2(255)
, DESCRIPTION VARCHAR2(255)
, HELPTEXT VARCHAR2(255)
, PRIMARY KEY (ID_STEP_TYPE)
)
;

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (1,'GetSlaveSequence','Get ID from slave server','Retrieves unique IDs in blocks from a slave server.  The referenced sequence needs to be configured on the slave server in the XML configuration file.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (2,'GetRepositoryNames','获取资源库配置','Lists detailed information about transformations and/or jobs in a repository');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (3,'MappingInput','映射输入规范','指定一个映射的字段输入');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (4,'Denormaliser','列转行','Denormalises rows by looking up key-value pairs and by assigning them to new fields in the输出 rows.{0}This method aggregates and needs the输入 rows to be sorted on the grouping fields');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (5,'SystemInfo','获取系统信息','获取系统信息，例如时间、日期.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (6,'XMLJoin','XML 连接','Joins a stream of XML-Tags into a target XML string');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (7,'Dummy','空操作 (什么也不做)','这个步骤类型什么都不作.{0} 当你想测试或拆分数据流的时候有用.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (8,'ZipFile','Zip 文件','Zip a file.'||chr(13)||'Filename will be extracted from incoming stream.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (9,'SecretKeyGenerator','生成密钥','Generate secret key for algorithms such as DES, AES, TripleDES.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (10,'SetValueField','设置字段值','Set value of a field with another value field');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (11,'SASInput','SAS 输入','This step reads files in sas7bdat (SAS) native format');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (12,'Delay','延迟行','Output each input row after a delay');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (13,'UserDefinedJavaClass','Java 代码','This step allows you to program a step using Java code');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (14,'RssInput','RSS 输入','Read RSS feeds');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (15,'SQLFileOutput','SQL 文件输出','Output SQL INSERT statements to file');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (16,'DetectLastRow','识别流的最后一行','Last row will be marked');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (17,'OldTextFileInput','Old Text file input','从一个文本文件（几种格式）里读取数据{0}这些数据可以被传递到下一个步骤里...');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (18,'MergeJoin','记录集连接','Joins two streams on a given key and outputs a joined set. The input streams must be sorted on the join key');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (19,'ExecSQLRow','执行SQL脚本(字段流替换)','Execute SQL script extracted from a field'||chr(13)||'created in a previous step.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (20,'SetValueConstant','将字段值设置为常量','Set value of a field to a constant');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (21,'TableExists','检查表是否存在','Check if a table exists on a specified connection');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (22,'PGBulkLoader','PostgreSQL 批量加载','PostgreSQL Bulk Loader');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (23,'GetFileNames','获取文件名','Get file names from the operating system and send them to the next step.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (24,'SocketWriter','Socket 写','Socket writer.  A socket server that can send rows of data to a socket reader.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (25,'OlapInput','OLAP 输入','Execute and retrieve data using an MDX query against any XML/A OLAP datasource using olap4j');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (26,'CreditCardValidator','检验信用卡号码是否有效','The Credit card validator step will help you tell:'||chr(13)||'(1) if a credit card number is valid (uses LUHN10 (MOD-10) algorithm)'||chr(13)||'(2) which credit card vendor handles that number'||chr(13)||'(VISA, MasterCard, Diners Club, EnRoute, American Express (AMEX),...)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (27,'InsertUpdate','插入 / 更新','基于关键字更新或插入记录到数据库.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (28,'Injector','记录注射','Injector step to allow to inject rows into the transformation through the java API');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (29,'AutoDoc','自动文档输出','This step automatically generates documentation based on input in the form of a list of transformations and jobs');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (30,'MailValidator','检验邮件地址','Check if an email address is valid.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (31,'SingleThreader','Single Threader','Executes a transformation snippet in a single thread.  You need a standard mapping or a transformation with an Injector step where data from the parent transformation will arive in blocks.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (32,'TransExecutor','Transformation Executor','This step executes a Pentaho Data Integration transformation, sets parameters and passes rows.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (33,'PropertyOutput','配置文件输出','Write data to properties file');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (34,'Calculator','计算器','通过执行简单的计算创建一个新字段');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (35,'JavaFilter','根据Java代码过滤记录','Filter rows using java code');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (36,'UniqueRowsByHashSet','唯一行 (哈希值)','Remove double rows and leave only unique occurrences by using a HashSet.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (37,'CheckSum','增加校验列','Add a checksum column for each input row');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (38,'TypeExitEdi2XmlStep','Edi to XML','Converts Edi text to generic XML');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (39,'FilesFromResult','从结果获取文件','This step allows you to read filenames used or generated in a previous entry in a job.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (40,'OraBulkLoader','Oracle 批量加载','Use Oracle Bulk Loader to load data');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (41,'CloneRow','克隆行','Clone a row as many times as needed');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (42,'GetTableNames','获取表名','Get table names from database connection and send them to the next step');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (43,'SocketReader','Socket 读','Socket reader.  A socket client that connects to a server (Socket Writer step).');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (44,'Normaliser','行转列','De-normalised information can be normalised using this step type.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (45,'DataGrid','自定义常量数据','Enter rows of static data in a grid, usually for testing, reference or demo purpose');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (46,'DetectEmptyStream','检测空流','This step will output one empty row if input stream is empty'||chr(13)||'(ie when input stream does not contain any row)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (47,'LDAPInput','LDAP 输入','Read data from LDAP host');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (48,'TableOutput','表输出','写信息到一个数据库表');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (49,'XBaseInput','XBase输入','从一个XBase类型的文件(DBF)读取记录');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (50,'FieldSplitter','拆分字段','当你想把一个字段拆分成多个时，使用这个类型.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (51,'MonetDBBulkLoader','MonetDB 批量加载','Load data into MonetDB by using their bulk load command in streaming mode.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (52,'SyslogMessage','发送信息至Syslog','Send message to Syslog server');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (53,'ExcelInput','Excel输入','从一个微软的Excel文件里读取数据. 兼容Excel 95, 97 and 2000.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (54,'SapInput','SAP 输入','Read data from SAP ERP, optionally with parameters');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (55,'InfobrightOutput','Infobright 批量加载','Load data to an Infobright database table');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (56,'SynchronizeAfterMerge','数据同步','This step perform insert/update/delete in one go based on the value of a field. ');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (57,'CubeOutput','Cube输出','把数据写入一个cube');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (58,'Janino','利用Janino计算Java表达式','Calculate the result of a Java Expression using Janino');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (59,'BlockUntilStepsFinish','阻塞数据直到步骤都完成','Block this step until selected steps finish.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (60,'JsonOutput','Json 输出','Create Json bloc and output it in a field ou a file.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (61,'SortRows','排序记录','基于字段值把记录排序(升序或降序)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (62,'SelectValues','字段选择','选择或移除记录里的字。{0}此外，可以设置字段的元数据: 类型, 长度和精度.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (63,'TableCompare','比较表','Compares 2 tables and gives back a list of differences');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (64,'VectorWiseBulkLoader','Ingres VectorWise 批量加载','This step interfaces with the Ingres VectorWise Bulk Loader "COPY TABLE" command.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (65,'PentahoReportingOutput','Pentaho 报表输出','Executes an existing report (PRPT)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (66,'MonetDBAgileMart','MonetDB Agile Mart','Load data into MonetDB for Agile BI use cases');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (67,'ChangeFileEncoding','改变文件编码','Change file encoding and create a new file');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (68,'SSH','运行SSH命令','Run SSH commands and returns result.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (69,'TextFileOutput','文本文件输出','写记录到一个文本文件.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (70,'PrioritizeStreams','数据流优先级排序','Prioritize streams in an order way.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (71,'Script','Script','Calculate values by scripting in Ruby, Python, Groovy, JavaScript, ... (JSR-223)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (72,'Formula','公式','使用 Pentaho 的公式库来计算公式');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (73,'SetVariable','设置变量','Set environment variables based on a single input row.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (74,'JoinRows','记录关联 (笛卡尔输出)','这个步骤的输出是输入流的笛卡尔的结果.{0} 输出结果的记录数是输入流记录之间的乘积.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (75,'RandomCCNumberGenerator','生成随机的信用卡号','Generate random valide (luhn check) credit card numbers');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (76,'ReservoirSampling','数据采样','[Transform] Samples a fixed number of rows from the incoming stream');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (77,'DBJoin','数据库连接','使用数据流里的值作为参数执行一个数据库查询');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (78,'MailInput','邮件信息输入','Read POP3/IMAP server and retrieve messages');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (79,'GetFilesRowsCount','获取文件行数','Returns rows count for text files.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (80,'LDIFInput','LDIF 输入','Read data from LDIF files');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (81,'FixedInput','固定宽度文件输入','Fixed file input');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (82,'DBLookup','数据库查询','使用字段值在数据库里查询值');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (83,'WebServiceAvailable','检查web服务是否可用','Check if a webservice is available');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (84,'SimpleMapping','Simple Mapping (sub-transformation)','Run a mapping (sub-transformation), use MappingInput and MappingOutput to specify the fields interface.  This is the simplified version only allowing one input and one output data set.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (85,'XSDValidator','使用 XSD 检验 XML 文件','Validate XML source (files or streams) against XML Schema Definition.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (86,'WebServiceLookup','Web 服务查询','使用 Web 服务查询信息');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (87,'ClosureGenerator','Closure Generator','This step allows you to generates a closure table using parent-child relationships.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (88,'XMLOutput','XML输出','写数据到一个XML文件');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (89,'UnivariateStats','单变量统计','This step computes some simple stats based on a single input field');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (90,'HTTP','HTTP client','Call a web service over HTTP by supplying a base URL by allowing parameters to be set dynamically');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (91,'Unique','去除重复记录','去除重复的记录行，保持记录唯一{0}这个仅仅基于一个已经排好序的输入.{1}如果输入没有排序, 仅仅两个连续的记录行被正确处理.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (92,'SortedMerge','排序合并','Sorted Merge');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (93,'PGPDecryptStream','PGP Decrypt stream','Decrypt data stream with PGP');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (94,'RowGenerator','生成记录','产生一些空记录或相等的行.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (95,'MySQLBulkLoader','MySQL 批量加载','MySQL bulk loader step, loading data over a named pipe (not available on MS Windows)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (96,'SampleRows','样本行','Filter rows based on the line number.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (97,'StringCut','剪切字符串','Strings cut (substring).');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (98,'GroupBy','分组','以分组的形式创建聚合.{0}这个仅仅在一个已经排好序的输入有效.{1}如果输入没有排序, 仅仅两个连续的记录行被正确处理.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (99,'ExecProcess','启动一个进程','Execute a process and return the result');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (100,'Constant','增加常量','给记录增加一到多个常量');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (101,'StringOperations','字符串操作','Apply certain operations like trimming, padding and others to string value.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (102,'StreamLookup','流查询','从转换中的其它流里查询值.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (103,'XMLInputStream','XML 文件输入 (StAX解析)','This step is capable of processing very large and complex XML files very fast.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (104,'Validator','数据检验','Validates passing data based on a set of rules');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (105,'CombinationLookup','联合查询/更新','更新数据仓库里的一个junk维 {0} 可选的, 科研查询维里的信息.{1}junk维的主键是所有的字段.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (106,'Delete','删除','基于关键字删除记录');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (107,'Sequence','增加序列','从序列获取下一个值');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (108,'NullIf','设置值为NULL','如果一个字段值等于某个固定值，那么把这个字段值设置成null');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (109,'YamlInput','Yaml 输入','Read YAML source (file or stream) parse them and convert them to rows and writes these to one or more output. ');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (110,'TableInput','表输入','从数据库表里读取信息.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (111,'RowsToResult','复制记录到结果','使用这个步骤把记录写到正在执行的任务.{0}信息将会被传递给同一个任务里的下一个条目.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (112,'JsonInput','Json 输入','Extract relevant portions out of JSON structures (file or incoming field) and output rows');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (113,'StepMetastructure','流的元数据','This is a step to read the metadata of the incoming stream.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (114,'Append','追加流','Append 2 streams in an ordered way');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (115,'RowsFromResult','从结果获取记录','这个允许你从同一个任务的前一个条目里读取记录.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (116,'DBProc','调用DB存储过程','通过调用数据库存储过程获得返回值.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (117,'Flattener','行扁平化','Flattens consequetive rows based on the order in which they appear in the输入 stream');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (118,'SymmetricCryptoTrans','对称加密','Encrypt or decrypt a string using symmetric encryption.'||chr(13)||'Available algorithms are DES, AES, TripleDES.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (119,'PropertyInput','配置文件输入','Read data (key, value) from properties files.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (120,'ExecSQL','执行SQL脚本','执行一个SQL脚本, 另外，可以使用输入的记录作为参数');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (121,'FilesToResult','复制文件到结果','This step allows you to set filenames in the result of this transformation.'||chr(13)||'Subsequent job entries can then use this information.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (122,'DimensionLookup','维度查询/更新','在一个数据仓库里更新一个渐变维 {0} 或者在这个维里查询信息.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (123,'MetaInject','ETL元数据注入','This step allows you to inject metadata into an existing transformation prior to execution.  This allows for the creation of dynamic and highly flexible data integration solutions.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (124,'getXMLData','XML 文件输入','Get data from XML file by using XPath.'||chr(13)||' This step also allows you to parse XML defined in a previous field.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (125,'FieldsChangeSequence','根据字段值来改变序列','Add sequence depending of fields value change.'||chr(13)||'Each time value of at least one field change, PDI will reset sequence. ');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (126,'FileLocked','检查文件是否已被锁定','Check if a file is locked by another process');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (127,'MondrianInput','Mondrian 输入','Execute and retrieve data using an MDX query against a Pentaho Analyses OLAP server (Mondrian)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (128,'GetSubFolders','获取子目录名','Read a parent folder and return all subfolders');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (129,'CsvInput','CSV文件输入','Simple CSV file input');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (130,'RssOutput','RSS 输出','Read RSS stream.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (131,'LoadFileInput','文件内容加载至内存','Load file content in memory');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (132,'RandomValue','生成随机数','Generate random value');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (133,'PGPEncryptStream','PGP Encrypt stream','Encrypt data stream with PGP');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (134,'LDAPOutput','LDAP 输出','Perform Insert, upsert, update, add or delete operations on records based on their DN (Distinguished  Name).');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (135,'TextFileInput','文本文件输入','从一个文本文件（几种格式）里读取数据{0}这些数据可以被传递到下一个步骤里...');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (136,'Update','更新','基于关键字更新记录到数据库');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (137,'AccessOutput','Access 输出','Stores records into an MS-Access database table.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (138,'SFTPPut','SFTP Put','Upload a file or a stream file to remote host via SFTP');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (139,'SwitchCase','Switch / Case','Switch a row to a certain target step based on the case value in a field.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (140,'AccessInput','Access 输入','Read data from a Microsoft Access file');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (141,'StepsMetrics','转换步骤信息统计','Return metrics for one or several steps');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (142,'ValueMapper','值映射','Maps values of a certain field from one value to another');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (143,'MappingOutput','映射输出规范','指定一个映射的字段输出');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (144,'GetVariable','获取变量','Determine the values of certain (environment or Kettle) variables and put them in field values.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (145,'DynamicSQLRow','执行Dynamic SQL','Execute dynamic SQL statement build in a previous field');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (146,'MultiwayMergeJoin','Multiway Merge Join','Multiway Merge Join');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (147,'TypeExitExcelWriterStep','Microsoft Excel 输出','Writes or appends data to an Excel file');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (148,'AddXML','增加XML列','Encode several fields into an XML fragment');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (149,'ParallelGzipCsvInput','GZIP CSV Input','Parallel GZIP CSV file input reader');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (150,'MergeRows','合并记录','合并两个数据流, 并根据某个关键字排序.  这两个数据流被比较，以标识相等的、变更的、删除的和新建的记录.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (151,'Rest','REST Client','Consume RESTfull services.'||chr(13)||'REpresentational State Transfer (REST) is a key design idiom that embraces a stateless client-server'||chr(13)||'architecture in which the web services are viewed as resources and can be identified by their URLs');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (152,'NumberRange','数值范围','Create ranges based on numeric field');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (153,'Mapping','映射 (子转换)','运行一个映射 (子转换), 使用MappingInput和MappingOutput来指定接口的字段');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (154,'CubeInput','Cube 文件输入','从一个cube读取记录.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (155,'ExcelOutput','Excel输出','Stores records into an Excel (XLS) document with formatting information.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (156,'AnalyticQuery','分析查询','Execute analytic queries over a sorted dataset (LEAD/LAG/FIRST/LAST)');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (157,'Mail','发送邮件','Send eMail.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (158,'ProcessFiles','处理文件','Process one file per row (copy or move or delete).'||chr(13)||'This step only accept filename in input.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (159,'ScriptValueMod','JavaScript代码','This is a modified plugin for the Scripting Values with improved interface and performance.'||chr(13)||'Written & donated to open source by Martin Lange, Proconis : http://www.proconis.de');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (160,'Abort','中止','Abort a transformation');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (161,'ColumnExists','检查表里的列是否存在','Check if a column exists in a table on a specified connection.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (162,'RegexEval','正则表达式','Regular expression Evaluation'||chr(13)||'This step uses a regular expression to evaluate a field. It can also extract new fields out of an existing field with capturing groups.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (163,'XSLT','XSL 转换','Transform XML stream using XSL (eXtensible Stylesheet Language).');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (164,'FuzzyMatch','模糊匹配','Finding approximate matches to a string using matching algorithms.'||chr(13)||'Read a field from a main stream and output approximative value from lookup stream.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (165,'SplitFieldToRows3','列拆分为多行','Splits a single string field by delimiter and creates a new row for each split term');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (166,'ReplaceString','字符串替换','Replace all occurences a word in a string with another word.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (167,'TableAgileMart','Table Agile Mart','Load data into a table for Agile BI use cases');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (168,'MemoryGroupBy','在内存中分组','Builds aggregates in a group by fashion.'||chr(13)||'This step doesn''t require sorted input.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (169,'HTTPPOST','HTTP Post','Call a web service request over HTTP by supplying a base URL by allowing parameters to be set dynamically');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (170,'WriteToLog','写日志','Write data to log');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (171,'IfNull','替换NULL值','Sets a field value to a constant if it is null.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (172,'JobExecutor','执行作业','This step executes a Pentaho Data Integration job, sets parameters and passes rows.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (173,'FileExists','检查文件是否存在','Check if a file exists');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (174,'BlockingStep','阻塞数据','This step blocks until all incoming rows have been processed.  Subsequent steps only recieve the last input row to this step.');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (175,'TeraFast','Teradata Fastload 批量加载','The Teradata Fastload Bulk loader');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (176,'FilterRows','过滤记录','使用简单的相等来过滤记录');

INSERT INTO R_STEP_TYPE(ID_STEP_TYPE, CODE, DESCRIPTION, HELPTEXT) VALUES (177,'ConcatFields','Concat Fields','Concat fields together into a new field (similar to the Text File Output step)');

CREATE TABLE R_STEP
(
  ID_STEP INTEGER
, ID_TRANSFORMATION INTEGER
, NAME VARCHAR2(255)
, DESCRIPTION CLOB
, ID_STEP_TYPE INTEGER
, DISTRIBUTE CHAR(1)
, COPIES INTEGER
, GUI_LOCATION_X INTEGER
, GUI_LOCATION_Y INTEGER
, GUI_DRAW CHAR(1)
, COPIES_STRING VARCHAR2(255)
, PRIMARY KEY (ID_STEP)
)
;

CREATE TABLE R_STEP_ATTRIBUTE
(
  ID_STEP_ATTRIBUTE INTEGER
, ID_TRANSFORMATION INTEGER
, ID_STEP INTEGER
, NR INTEGER
, CODE VARCHAR2(255)
, VALUE_NUM INTEGER
, VALUE_STR CLOB
, PRIMARY KEY (ID_STEP_ATTRIBUTE)
)
;

CREATE UNIQUE INDEX IDX_RSAT ON R_STEP_ATTRIBUTE(ID_STEP, CODE, NR)
;

CREATE TABLE R_STEP_DATABASE
(
  ID_TRANSFORMATION INTEGER
, ID_STEP INTEGER
, ID_DATABASE INTEGER
)
;

CREATE INDEX IDX_RSD1 ON R_STEP_DATABASE(ID_TRANSFORMATION)
;

CREATE INDEX IDX_RSD2 ON R_STEP_DATABASE(ID_DATABASE)
;

CREATE TABLE R_TRANS_NOTE
(
  ID_TRANSFORMATION INTEGER
, ID_NOTE INTEGER
)
;

CREATE TABLE R_LOGLEVEL
(
  ID_LOGLEVEL INTEGER
, CODE VARCHAR2(255)
, DESCRIPTION VARCHAR2(255)
, PRIMARY KEY (ID_LOGLEVEL)
)
;

INSERT INTO R_LOGLEVEL(ID_LOGLEVEL, CODE, DESCRIPTION) VALUES (1,'Error','错误日志');

INSERT INTO R_LOGLEVEL(ID_LOGLEVEL, CODE, DESCRIPTION) VALUES (2,'Minimal','最小日志');

INSERT INTO R_LOGLEVEL(ID_LOGLEVEL, CODE, DESCRIPTION) VALUES (3,'Basic','基本日志');

INSERT INTO R_LOGLEVEL(ID_LOGLEVEL, CODE, DESCRIPTION) VALUES (4,'Detailed','详细日志');

INSERT INTO R_LOGLEVEL(ID_LOGLEVEL, CODE, DESCRIPTION) VALUES (5,'Debug','调试');

INSERT INTO R_LOGLEVEL(ID_LOGLEVEL, CODE, DESCRIPTION) VALUES (6,'Rowlevel','行级日志(非常详细)');

CREATE TABLE R_LOG
(
  ID_LOG INTEGER
, NAME VARCHAR2(255)
, ID_LOGLEVEL INTEGER
, LOGTYPE VARCHAR2(255)
, FILENAME VARCHAR2(255)
, FILEEXTENTION VARCHAR2(255)
, ADD_DATE CHAR(1)
, ADD_TIME CHAR(1)
, ID_DATABASE_LOG INTEGER
, TABLE_NAME_LOG VARCHAR2(255)
, PRIMARY KEY (ID_LOG)
)
;

CREATE TABLE R_JOB
(
  ID_JOB INTEGER
, ID_DIRECTORY INTEGER
, NAME VARCHAR2(255)
, DESCRIPTION CLOB
, EXTENDED_DESCRIPTION CLOB
, JOB_VERSION VARCHAR2(255)
, JOB_STATUS INTEGER
, ID_DATABASE_LOG INTEGER
, TABLE_NAME_LOG VARCHAR2(255)
, CREATED_USER VARCHAR2(255)
, CREATED_DATE DATE
, MODIFIED_USER VARCHAR2(255)
, MODIFIED_DATE DATE
, USE_BATCH_ID CHAR(1)
, PASS_BATCH_ID CHAR(1)
, USE_LOGFIELD CHAR(1)
, SHARED_FILE VARCHAR2(255)
, PRIMARY KEY (ID_JOB)
)
;

CREATE TABLE R_JOBENTRY_DATABASE
(
  ID_JOB INTEGER
, ID_JOBENTRY INTEGER
, ID_DATABASE INTEGER
)
;

CREATE INDEX IDX_RJD1 ON R_JOBENTRY_DATABASE(ID_JOB)
;

CREATE INDEX IDX_RJD2 ON R_JOBENTRY_DATABASE(ID_DATABASE)
;

CREATE TABLE R_JOBENTRY_TYPE
(
  ID_JOBENTRY_TYPE INTEGER
, CODE VARCHAR2(255)
, DESCRIPTION VARCHAR2(255)
, PRIMARY KEY (ID_JOBENTRY_TYPE)
)
;

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (1,'DELAY','等待');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (2,'HTTP','HTTP');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (3,'UNZIP','解压缩文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (4,'FILES_EXIST','检查多个文件是否存在');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (5,'GET_POP','POP 收信');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (6,'MAIL','发送邮件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (7,'WRITE_TO_FILE','写入文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (8,'EVAL_FILES_METRICS','计算文件大小或个数');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (9,'FILE_EXISTS','检查一个文件是否存在');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (10,'WAIT_FOR_SQL','等待SQL');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (11,'SFTP','SFTP 下载');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (12,'SET_VARIABLES','设置变量');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (13,'TRANS','转换');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (14,'XML_WELL_FORMED','检查 XML 文件格式');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (15,'SEND_NAGIOS_PASSIVE_CHECK','发送Nagios 被动检查');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (16,'SQL','SQL');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (17,'FTP_DELETE','FTP 删除');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (18,'SUCCESS','成功');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (19,'EVAL_TABLE_CONTENT','计算表中的记录数');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (20,'COPY_FILES','复制文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (21,'DELETE_FILE','删除一个文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (22,'MOVE_FILES','移动文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (23,'FTPS_GET','FTPS 下载');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (24,'MSGBOX_INFO','显示消息对话框');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (25,'CONNECTED_TO_REPOSITORY','检查是否连接到资源库');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (26,'EXPORT_REPOSITORY','导出资源库到XML文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (27,'PGP_VERIFY_FILES','用PGP验证文件签名');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (28,'TELNET','远程登录一台主机');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (29,'DELETE_RESULT_FILENAMES','从结果文件中删除文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (30,'ABORT','中止作业');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (31,'CHECK_FILES_LOCKED','检查文件是否被锁');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (32,'DELETE_FOLDERS','删除目录');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (33,'FILE_COMPARE','比较文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (34,'SIMPLE_EVAL','检验字段的值');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (35,'WRITE_TO_LOG','写日志');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (36,'WAIT_FOR_FILE','等待文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (37,'TRUNCATE_TABLES','清空表');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (38,'CHECK_DB_CONNECTIONS','检查数据库连接');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (39,'ZIP_FILE','Zip 压缩文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (40,'COPY_MOVE_RESULT_FILENAMES','复制/移动结果文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (41,'JOB','作业');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (42,'FTP_PUT','FTP 上传');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (43,'WEBSERVICE_AVAILABLE','检查web服务是否可用');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (44,'TALEND_JOB_EXEC','Talend 作业执行');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (45,'MSSQL_BULK_LOAD','SQLServer 批量加载');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (46,'FOLDER_IS_EMPTY','检查目录是否为空');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (47,'MAIL_VALIDATOR','邮件验证');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (48,'CREATE_FOLDER','创建一个目录');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (49,'SHELL','Shell');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (50,'DELETE_FILES','删除多个文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (51,'ADD_RESULT_FILENAMES','添加文件到结果文件中');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (52,'XSD_VALIDATOR','XSD 验证器');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (53,'PING','Ping 一台主机');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (54,'MYSQL_BULK_FILE','从 Mysql 批量导出到文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (55,'FTP','FTP 下载');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (56,'XSLT','XSL 转换');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (57,'SPECIAL','特殊作业项');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (58,'EVAL','使用 JavaScript 脚本验证');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (59,'COLUMNS_EXIST','检查列是否存在');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (60,'DOS_UNIX_CONVERTER','DOS和UNIX之间的文本转换');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (61,'CREATE_FILE','创建文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (62,'PGP_DECRYPT_FILES','用PGP解密文件');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (63,'SYSLOG','用 Syslog 发送信息');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (64,'FOLDERS_COMPARE','比较目录');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (65,'FTPS_PUT','FTPS 上传');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (66,'SFTPPUT','SFTP 上传');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (67,'DTD_VALIDATOR','DTD 验证');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (68,'SNMP_TRAP','发送 SNMP 自陷');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (69,'TABLE_EXISTS','检查表是否存在');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (70,'MYSQL_BULK_LOAD','Mysql 批量加载');

INSERT INTO R_JOBENTRY_TYPE(ID_JOBENTRY_TYPE, CODE, DESCRIPTION) VALUES (71,'PGP_ENCRYPT_FILES','用PGP加密文件');

CREATE TABLE R_JOBENTRY
(
  ID_JOBENTRY INTEGER
, ID_JOB INTEGER
, ID_JOBENTRY_TYPE INTEGER
, NAME VARCHAR2(255)
, DESCRIPTION CLOB
, PRIMARY KEY (ID_JOBENTRY)
)
;

CREATE TABLE R_JOBENTRY_COPY
(
  ID_JOBENTRY_COPY INTEGER
, ID_JOBENTRY INTEGER
, ID_JOB INTEGER
, ID_JOBENTRY_TYPE INTEGER
, NR INTEGER
, GUI_LOCATION_X INTEGER
, GUI_LOCATION_Y INTEGER
, GUI_DRAW CHAR(1)
, PARALLEL CHAR(1)
, PRIMARY KEY (ID_JOBENTRY_COPY)
)
;

CREATE TABLE R_JOBENTRY_ATTRIBUTE
(
  ID_JOBENTRY_ATTRIBUTE INTEGER
, ID_JOB INTEGER
, ID_JOBENTRY INTEGER
, NR INTEGER
, CODE VARCHAR2(255)
, VALUE_NUM NUMBER(13, 2)
, VALUE_STR CLOB
, PRIMARY KEY (ID_JOBENTRY_ATTRIBUTE)
)
;

CREATE UNIQUE INDEX IDX_RJEA ON R_JOBENTRY_ATTRIBUTE(ID_JOBENTRY_ATTRIBUTE, CODE, NR)
;

CREATE TABLE R_JOB_HOP
(
  ID_JOB_HOP INTEGER
, ID_JOB INTEGER
, ID_JOBENTRY_COPY_FROM INTEGER
, ID_JOBENTRY_COPY_TO INTEGER
, ENABLED CHAR(1)
, EVALUATION CHAR(1)
, UNCONDITIONAL CHAR(1)
, PRIMARY KEY (ID_JOB_HOP)
)
;

CREATE TABLE R_JOB_NOTE
(
  ID_JOB INTEGER
, ID_NOTE INTEGER
)
;

CREATE TABLE R_TRANS_LOCK
(
  ID_TRANS_LOCK INTEGER
, ID_TRANSFORMATION INTEGER
, ID_USER INTEGER
, LOCK_MESSAGE CLOB
, LOCK_DATE DATE
, PRIMARY KEY (ID_TRANS_LOCK)
)
;

CREATE TABLE R_JOB_LOCK
(
  ID_JOB_LOCK INTEGER
, ID_JOB INTEGER
, ID_USER INTEGER
, LOCK_MESSAGE CLOB
, LOCK_DATE DATE
, PRIMARY KEY (ID_JOB_LOCK)
)
;

CREATE TABLE R_NAMESPACE
(
  ID_NAMESPACE INTEGER
, NAME VARCHAR2(1999)
, PRIMARY KEY (ID_NAMESPACE)
)
;

CREATE TABLE R_ELEMENT_TYPE
(
  ID_ELEMENT_TYPE INTEGER
, ID_NAMESPACE INTEGER
, NAME VARCHAR2(1999)
, DESCRIPTION CLOB
, PRIMARY KEY (ID_ELEMENT_TYPE)
)
;

CREATE TABLE R_ELEMENT
(
  ID_ELEMENT INTEGER
, ID_ELEMENT_TYPE INTEGER
, NAME VARCHAR2(1999)
, PRIMARY KEY (ID_ELEMENT)
)
;

CREATE TABLE R_ELEMENT_ATTRIBUTE
(
  ID_ELEMENT_ATTRIBUTE INTEGER
, ID_ELEMENT INTEGER
, ID_ELEMENT_ATTRIBUTE_PARENT INTEGER
, ATTR_KEY VARCHAR2(255)
, ATTR_VALUE CLOB
, PRIMARY KEY (ID_ELEMENT_ATTRIBUTE)
)
;

CREATE TABLE R_USER
(
  ID_USER INTEGER
, LOGIN VARCHAR2(255)
, PASSWORD VARCHAR2(255)
, NAME VARCHAR2(255)
, DESCRIPTION VARCHAR2(255)
, ENABLED CHAR(1)
, PRIMARY KEY (ID_USER)
)
;

INSERT INTO R_USER(ID_USER, LOGIN, PASSWORD, NAME, DESCRIPTION, ENABLED) VALUES (1,'admin','2be98afc86aa7f2e4cb79ce71da9fa6d4','Administrator','User manager','Y');

INSERT INTO R_USER(ID_USER, LOGIN, PASSWORD, NAME, DESCRIPTION, ENABLED) VALUES (2,'guest','2be98afc86aa7f2e4cb79ce77cb97bcce','Guest account','Read-only guest account','Y');
